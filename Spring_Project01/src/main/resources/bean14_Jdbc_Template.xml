<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--开启组件扫描-->
    <context:component-scan base-package="com.AtGuiGu.Spring9_JdbcTemplate"></context:component-scan>


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="jdbc:mysql://localhost:3306/user_db?useUnicode=true&amp;characterEncoding=UTF-8&amp;serverTimezone=UTC&amp;useSSL=false&amp;rewriteBatchedStatements=true" />
        <property name="username" value="root" />
        <property name="password" value="123" />
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
    </bean>

    <!--JdbcTemplate对象-->
    <bean id="jdbdTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <!--注入DataSource
            JdbcTemplate有参构造传入DataSource对象, 有参构造中调用了父类中的setDataSource()方法
            通过JdbcTemplate父类JdbcAccessor中的setDataSource()方法注入dataSource
        -->
        <property name="dataSource" ref="dataSource"></property>
    </bean>
</beans>